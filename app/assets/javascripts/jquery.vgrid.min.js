/**
 * jQuery VGrid v0.1.8 - variable grid layout plugin
 *
 * Terms of Use - jQuery VGrid
 * under the MIT (http://www.opensource.org/licenses/mit-license.php) License.
 *
 * Copyright 2009-2012 xlune.com All rights reserved.
 * (http://blog.xlune.com/2009/09/jqueryvgrid.html)
 */
 /*
(function(g){function i(a){var b=a.data("_vgchild"),c=[[0,a.width(),0]],h=0,e,d,j;b.each(function(){e=g(this);if("none"==e.css("display"))return!0;var a=e.width(),b=e.height(),a=a+(Number(e.css("margin-left").replace("px",""))+Number(e.css("padding-left").replace("px",""))+Number(e.get(0).style.borderLeftWidth.replace("px",""))+Number(e.css("margin-right").replace("px",""))+Number(e.css("padding-right").replace("px",""))+Number(e.get(0).style.borderRightWidth.replace("px",""))),b=b+(Number(e.css("margin-top").replace("px",
""))+Number(e.css("padding-top").replace("px",""))+Number(e.get(0).style.borderTopWidth.replace("px",""))+Number(e.css("margin-bottom").replace("px",""))+Number(e.css("padding-bottom").replace("px",""))+Number(e.get(0).style.borderBottomWidth.replace("px","")));d=[a,b];a:{for(var a=d[0],b=c.concat().sort(q),f=b[b.length-1][2],k=0,o=b.length;k<o&&!(b[k][2]>=f);k++)if(b[k][1]-b[k][0]>=a){j=[b[k][0],b[k][2]];break a}j=[0,f]}b=j;a=c.concat().sort(q);b=[b[0],b[0]+d[0],b[1]+d[1]];f=0;for(k=a.length;f<k;f++)if(b[0]<=
a[f][0]&&a[f][1]<=b[1])delete a[f];else{var o=a,i=f,l=a[f],n=b;if(l[0]>=n[0]&&l[0]<n[1]||l[1]>=n[0]&&l[1]<n[1])l[0]>=n[0]&&l[0]<n[1]?l[0]=n[1]:l[1]=n[0];o[i]=l}a=a.concat([b]).sort(s);b=[];f=0;for(k=a.length;f<k;f++)a[f]&&(0<b.length&&b[b.length-1][1]==a[f][0]&&b[b.length-1][2]==a[f][2]?b[b.length-1][1]=a[f][1]:b.push(a[f]));c=b;h=Math.max(h,j[1]+d[1]);e.data("_vgleft",j[0]);e.data("_vgtop",j[1])});a.data("_vgwrapheight",h);t(a)}function q(a,b){return!a||!b?0:a[2]==b[2]&&a[0]>b[0]||a[2]>b[2]?1:-1}
function s(a,b){return!a||!b?0:a[0]>b[0]?1:-1}function t(a){var b=a.data("_vgchild").length*(a.data("_vgopt").delay||0)+a.data("_vgopt").time||500;a.stop();a.height()<a.data("_vgwrapheight")?g.browser.msie?a.height(a.data("_vgwrapheight")):a.animate({height:a.data("_vgwrapheight")+"px"},a.data("_vgopt").time||500,"easeOutQuart"):(clearTimeout(a.data("_vgwraptimeout")),a.data("_vgwraptimeout",setTimeout(function(){g.browser.msie?a.height(a.data("_vgwrapheight")):a.animate({height:a.data("_vgwrapheight")+
"px"},a.data("_vgopt").time||500,"easeOutQuart")},b)))}function u(a){var b;a.each(function(){b=g(this);b.css("left",b.data("_vgleft")+"px");b.css("top",b.data("_vgtop")+"px")})}function p(a,b,c,h){var e=g(a).parent(),d=!1,j=a.length,i,m,f;for(i=0;i<j;i++)m=g(a[i]),f=m.position(),f.left!=m.data("_vgleft")&&f.top!=m.data("_vgtop")&&(d=!0);if(d){if("function"==typeof e.data("_vgopt").onStart)e.data("_vgopt").onStart();a.each(function(d){var f=g(this),j={duration:c,easing:b};a.size()-1==d&&(j.complete=
e.data("_vgopt").onFinish||null);clearTimeout(f.data("_vgtimeout"));f.data("_vgtimeout",setTimeout(function(){f.animate({left:f.data("_vgleft")+"px",top:f.data("_vgtop")+"px"},j)},d*h))})}}function m(a){a.each(function(){var a=g(this);clearTimeout(a.data("_vgtimeout"));a.data("_vgtimeout",setTimeout(function(){i(a);p(a.data("_vgchild"),a.data("_vgopt").easing||"linear",a.data("_vgopt").time||500,a.data("_vgopt").delay||0)},500))})}function v(a,b){var c=g("<span />").text(" ").attr("id","_vgridspan").hide().appendTo("body");
c.data("size",c.css("font-size"));c.data("timer",setInterval(function(){c.css("font-size")!=c.data("size")&&(c.data("size",c.css("font-size")),b(a))},1E3))}function r(a,b){a.data("vgrid-image-event-added")||(a.data("vgrid-image-event-added",1),a.bind("vgrid-added",function(){a.find("img").each(function(){var e=g(this);e.data("vgrid-image-handler")||(e.data("vgrid-image-handler",1),e.bind("load",function(){b(a)}))})}));a.trigger("vgrid-added");var c=a.append,h=a.prepend;a.append=function(){c.apply(a,
arguments);a.trigger("vgrid-added")};a.prepend=function(){h.apply(a,arguments);a.trigger("vgrid-added")}}g.fn.extend({vgrid:function(a){var b=g(this),c=a||{};c.easeing&&(c.easing=c.easeing);b.each(function(){var a=g(this);a.data("_vgopt",c);a.data("_vgchild",a.find("> *"));a.data("_vgdefchild",a.data("_vgchild"));a.css({position:"relative",width:"auto"});a.data("_vgchild").css("position","absolute");i(a);u(a.data("_vgchild"));if(a.data("_vgopt").fadeIn){var b=typeof a.data("_vgopt").fadeIn=="object"?
a.data("_vgopt").fadeIn:{time:a.data("_vgopt").fadeIn};a.data("_vgchild").each(function(a){var c=g(this);if(c.css("display")=="none")return true;c.stop().fadeTo(0,0);setTimeout(function(){c.stop().fadeTo(b.time||250,1)},a*(b.delay||0))})}g(window).resize(function(){m(a)});c.useLoadImageEvent&&r(a,m);c.useFontSizeListener&&v(a,m)});return b},vgrefresh:function(a,b,c,h){var e=g(this);e.each(function(){var d=g(this),e=d.data("_vgopt")||{};d.data("_vgchild")&&(d.data("_vgchild",d.find("> *")),d.data("_vgchild").css("position",
"absolute"),i(d),b="number"==typeof b?b:d.data("_vgopt").time||500,c="number"==typeof c?c:d.data("_vgopt").delay||0,p(d.data("_vgchild"),a||d.data("_vgopt").easing||"linear",b,c),"function"==typeof h&&setTimeout(h,d.data("_vgchild").length*c+b));e.useLoadImageEvent&&r(d,m)});return e},vgsort:function(a,b,c,h){var e=g(this);e.each(function(){var d=g(this);d.data("_vgchild")&&(d.data("_vgchild",d.data("_vgchild").sort(a)),d.data("_vgchild").each(function(){g(this).appendTo(d)}),i(d),p(d.data("_vgchild"),
b||d.data("_vgopt").easing||"linear","number"==typeof c?c:d.data("_vgopt").time||500,"number"==typeof h?h:d.data("_vgopt").delay||0))});return e}})})(jQuery);
*/

/**
 * jQuery VGrid v0.1.4-mod / MIT License.
 * Modified by TRIPLESHIPS,Inc. 2010/03/02
 * ----------------------------------------------
 * 
 * jQuery VGrid v0.1.4 - variable grid layout plugin
 *
 * Terms of Use - jQuery VGrid
 * under the MIT (http://www.opensource.org/licenses/mit-license.php) License.
 *
 * Copyright 2009-2010 xlune.com All rights reserved.
 * (http://blog.xlune.com/2009/09/jqueryvgrid.html)
 */
(function($)
{
  function makePos(self, initpos) //mod (added initpos argument)
  {
    var _childs = self.data("_vgchild");
    var _width = self.width();
    
    /* ----- mod start ----- */
    var _bodyW = $(window).width();
    var _defW = self.data("_vgopt").gridDefWidth || 290 + 15 + 15 + 5;
    var _selRefGrid = self.data("_vgopt").selRefGrid || "#grid-wrapper div.x1";
    var _selFitWidth = self.data("_vgopt").selFitWidth || "#container";
    
    if ( $(_selRefGrid).get().length ) 
    {
      var _colW = getSize($(_selRefGrid).eq(0))[0]; //use _w only
    }
    else 
    {
      var _colW = _defW;
    }
    var _colWSum = Math.floor(_bodyW / _colW) * _colW;
    if ( $.isArray(_selFitWidth) ) 
    {
      for (var i=0; i<_selFitWidth.length; i++)
      {
        $(_selFitWidth[i]).width( _colWSum );
      }
    }
    else
    {
      $(_selFitWidth).width( _colWSum );
    }
    
    var _ofsL = 0;
    var _ofsT = (initpos) ? 2000 : 0;
    var _adjL = (initpos) ? 0.5 : 1;
    var _adjT = (initpos) ? 0.5 : 1;
    /* ----- mod end ----- */
    
    var _matrix = [[0,_width,0]];
    var _hmax=0;
    _childs.each(function(i)
    {
      var _c = $(this);
      var _size = getSize(_c);
      var _point = getAttachPoint(_matrix, _size[0]);
      _matrix = updateAttachArea(_matrix, _point, _size);
      _hmax = Math.max(_hmax, _point[1] + _size[1]);
      //_c.data("_vgleft", _point[0]);
      //_c.data("_vgtop", _point[1]);
      /* ----- mod start ----- */
      _c.data("_vgleft", Math.floor( (_point[0] + _ofsL) * _adjL) );
      _c.data("_vgtop", Math.floor( (_point[1] + _ofsT) * _adjT) );
      /* ----- mod end ----- */
    });
    self.data("_vgwrapheight", _hmax);
    heightTo(self);
  };
  function getAttachPoint(mtx, width)
  {
    var _mtx = mtx.concat([]).sort(matrixSortDepth);
    var _max = _mtx[_mtx.length-1][2];
    for(var i=0,imax=_mtx.length; i<imax; i++)
    {
      if(_mtx[i][2] >= _max) break;
      if(_mtx[i][1]-_mtx[i][0] >= width)
      {
        return [_mtx[i][0], _mtx[i][2]];
      }
    }
    return [0, _max];
  };
  function updateAttachArea(mtx, point, size)
  {
    var _mtx = mtx.concat().sort(matrixSortDepth);
    var _cell = [point[0], point[0]+size[0], point[1]+size[1]];
    for(var i=0,imax=_mtx.length; i<imax; i++)
    {
      if(_cell[0] <= _mtx[i][0] && _mtx[i][1] <= _cell[1])
      {
        delete _mtx[i];
      }
      else
      {
        _mtx[i] = matrixTrimWidth(_mtx[i], _cell);
      }
    }
    return matrixJoin(_mtx, _cell);
  };
  function matrixSortDepth(a, b)
  {
    return ((a[2] == b[2] && a[0] > b[0]) || a[2] > b[2]) ? 1 : -1;
  };
  function matrixSortX(a, b)
  {
    if (a == null || b == null) return 0;
    else return (a[0] > b[0]) ? 1 : -1;
  };
  function matrixJoin(mtx, cell)
  {
    var _mtx = mtx.concat([cell]).sort(matrixSortX);
    var _mtx_join = [];
    for(var i=0,imax=_mtx.length; i<imax; i++)
    {
      if(!_mtx[i]) continue;
      if(_mtx_join.length > 0
        && _mtx_join[_mtx_join.length-1][1] == _mtx[i][0]
        && _mtx_join[_mtx_join.length-1][2] == _mtx[i][2])
      {
        _mtx_join[_mtx_join.length-1][1] = _mtx[i][1];
      }
      else
      {
        _mtx_join.push(_mtx[i]);
      }
    }
    return _mtx_join;
  };
  function matrixTrimWidth(a, b)
  {
    if(a[0] >= b[0] && a[0] < b[1] || a[1] >= b[0] && a[1] < b[1])
    {
      if(a[0] >= b[0] && a[0] < b[1])
      {
        a[0] = b[1];
      }
      else
      {
        a[1] = b[0];
      }
    }
    return a;
  };
  function getSize(child)
  {
    var _w = child.width();
    var _h = child.height();
    _w += Number(child.css("margin-left").replace('px', ''))
        +Number(child.css("padding-left").replace('px', ''))
        //+Number(child.get(0).style.borderLeftWidth.replace('px', ''))
        +Number(child.css("border-left-width").replace('px', '')) //mod
        +Number(child.css("margin-right").replace('px', ''))
        +Number(child.css("padding-right").replace('px', ''))
        //+Number(child.get(0).style.borderRightWidth.replace('px', ''));
        +Number(child.css("border-right-width").replace('px', '')) //mod
    _h += Number(child.css("margin-top").replace('px', ''))
        +Number(child.css("padding-top").replace('px', ''))
        //+Number(child.get(0).style.borderTopWidth.replace('px', ''))
        +Number(child.css("border-top-width").replace('px', '')) //mod
        +Number(child.css("margin-bottom").replace('px', ''))
        +Number(child.css("padding-bottom").replace('px', ''))
        //+Number(child.get(0).style.borderBottomWidth.replace('px', ''));
        +Number(child.css("border-bottom-width").replace('px', '')); //mod
    return [_w, _h];
  };
  function heightTo(self)
  {
    var _self = self;
    var _delay = _self.data("_vgchild").length
      * (_self.data("_vgopt").delay || 0)
      + _self.data("_vgopt").time || 500;
    _self.stop();
    if(_self.height() < _self.data("_vgwrapheight"))
    {
      if($.browser.msie)
      {
        _self.height(_self.data("_vgwrapheight"));
      }
      else
      {
        _self.animate(
          {
            height: _self.data("_vgwrapheight")+"px"
          },
          (_self.data("_vgopt").time || 500),
          "easeOutQuart"
        );
      }
    }
    else
    {
      clearTimeout(_self.data("_vgwraptimeout"));
      _self.data("_vgwraptimeout", setTimeout(function(){
        if($.browser.msie)
        {
          _self.height(_self.data("_vgwrapheight"));
        }
        else
        {
          _self.animate(
            {
              height: _self.data("_vgwrapheight")+"px"
            },
            (_self.data("_vgopt").time || 500),
            "easeOutQuart"
          );
        }
      }, _delay));
    }
  };
  function moveTo(childs)
  {
    childs.each(function(i)
    {
      var _c = $(this);
      _c.css("left", _c.data("_vgleft")+"px");
      _c.css("top", _c.data("_vgtop")+"px");
    });
  };
  function animateTo(childs, easing, time, delay)
  {
    var _self = $(childs).parent();
    var isMove = false;
    var imax = childs.length;
    var i,_c,_pos;
    for(i=0; i<imax; i++)
    {
      _c = $(childs[i]);
      _pos = _c.position();
      if(_pos.left != _c.data("_vgleft") && _pos.top != _c.data("_vgtop"))
      {
        isMove = true;
      }
    }
    if(isMove)
    {
      if(typeof(_self.data("_vgopt").onStart) == "function") _self.data("_vgopt").onStart();
      childs.each(function(i)
      {
        var _c = $(this);
        var _opt = {
          duration: time,
          easing: easing
        };
        if(childs.size()-1 == i)
        {
          _opt.complete = _self.data("_vgopt").onFinish || null;
        }
        clearTimeout(_c.data("_vgtimeout"));
        _c.data("_vgtimeout", setTimeout(function(){
          _c.animate(
            {
              left: _c.data("_vgleft")+"px",
              top: _c.data("_vgtop")+"px"
            },
            _opt
          );
        }, i*delay));
      });
    }
  };
  function refleshHandler(tg)
  {
    var _self = tg;
    clearTimeout(_self.data("_vgtimeout"));
    makePos(_self);
    _self.data("_vgtimeout", setTimeout(function(){
      animateTo(
        _self.data("_vgchild"),
        _self.data("_vgopt").easeing || "linear",
        _self.data("_vgopt").time || 500,
        _self.data("_vgopt").delay || 0
      );
    }, 250));
  };
  function setFontSizeListener()
  {
    var s = $("<span />")
      .text(" ")
      .attr("id", "_vgridspan")
      .hide()
      .appendTo("body");
    s.data("size", s.css("font-size"));
    s.data("timer", setInterval(function(){
      if(s.css("font-size") != s.data("size"))
      {
        s.data("size", s.css("font-size"));
        $(window).resize();
      }
    }, 500));
  };
  $.fn.extend({
    vgrid: function(option)
    {
      var _self = $(this);
      var _opt = option || {};
      _self.data("_vgopt", _opt);
      _self.data("_vgchild", _self.find("> *"));
      _self.data("_vgdefchild", _self.data("_vgchild"));
      _self.css({
        "position": "relative",
        "width": "auto"
      });
      _self.data("_vgchild").css("position", "absolute");
      
      //makePos(_self);
      //moveTo(_self.data("_vgchild"));
      /* ----- mod start ----- */
      if(_self.data("_vgopt").forceAnim)
      {
        makePos(_self, true); // make init position
        moveTo(_self.data("_vgchild"));
        refleshHandler(_self); // animation
      }
      else {
        makePos(_self);
        moveTo(_self.data("_vgchild")); // no animation
      }
      /* ----- mod end ----- */
      
      if(_self.data("_vgopt").fadeIn)
      {
        var _prop = (typeof(_self.data("_vgopt").fadeIn)=='object')
                ? _self.data("_vgopt").fadeIn
                : {time: _self.data("_vgopt").fadeIn} ;
        _self.data("_vgchild").each(function(i)
        {
          var _c = $(this);
          _c.css('display', 'none');
          setTimeout(function(){
            _c.fadeIn(_prop.time || 250);
          }, i * (_prop.delay || 0));
        });
      }
      $(window).resize(function(e)
      {
        refleshHandler(_self);
        setTimeout(function(){ refleshHandler(_self) }, 250); //refresh twice for IE, Fx
      });
      setFontSizeListener();
      return _self;
    },
    vgrefresh: function(easeing, time, delay, func)
    {
      var _obj = $(this);
      if(_obj.data("_vgchild"))
      {
        _obj.data("_vgchild", _obj.find("> *"));
        _obj.data("_vgchild").css("position", "absolute");
        makePos(_obj);
        time = typeof(time)=="number" ? time : _obj.data("_vgopt").time || 500;
        delay = typeof(delay)=="number" ? delay : _obj.data("_vgopt").delay || 0;
        animateTo(
          _obj.data("_vgchild"),
          easeing || _obj.data("_vgopt").easeing || "linear",
          time,
          delay
        );
        if(typeof(func)=='function')
        {
          setTimeout(
            func,
            _obj.data("_vgchild").length * delay + time
          );
        }
      }
      return _obj;
    },
    vgsort: function(func, easeing, time, delay)
    {
      var _obj = $(this);
      if(_obj.data("_vgchild"))
      {
        _obj.data("_vgchild", _obj.data("_vgchild").sort(func));
        _obj.data("_vgchild").each(function(num){
          $(this).appendTo(_obj);
        });
        makePos(_obj);
        animateTo(
          _obj.data("_vgchild"),
          easeing || _obj.data("_vgopt").easeing || "linear",
          typeof(time)=="number" ? time : _obj.data("_vgopt").time || 500,
          typeof(delay)=="number" ? delay : _obj.data("_vgopt").delay || 0
        );
      }
      return _obj;
    }
  });
})(jQuery);
